# tsa

**Guard your REST API with a bit of fascism.**

## Installation

```bash
$ npm install tsa
```

## Usage

### Basic Scenario

Create a guard:

```javascript
var tsa = require('tsa');
var guard = tsa({
    property1: tsa.required()
  , property2: tsa.optional()
});
```

Validate input against guard:

```javascript
var input = {
    property1: 'foo'
  , property3: 'bar'
};
guard.frisk(input, function(err, result){
  // err is null
  // result.property1 === 'foo'
  // result.property2 === undefined
  // there is no key result.property3
});
```

### Express Middleware

Create a guard:

```javascript
var tsa = require('tsa');
var guard = tsa({
    property1: tsa.required()
  , property2: tsa.optional()
});
```

Ensure you're using express's body parser:

```javascript
app.use(express.bodyParser());
```

Add that guard's middleware to your route:

```javascript
app.post('/foo', guard.middleware(), function(req, res){
  // req.tsa is the whitelisted, validated, transformed version of the input from req.body
});

app.error(function(err, req, res, next){
  // err is an array of errors generated by the guard
});
```

### Complex Objects

```javascript
var tsa = require('tsa');
var address = tsa({
    street1: tsa.required()
  , street2: tsa.optional()
});
var person = tsa({
    name: tsa.required()
  , address: address
});
```

## Test

Run tests via mocha:

```bash
$ npm install -g mocha
$ git clone git://github.com/TroyGoode/node-tsa.git tsa
$ cd tsa/
$ npm install
$ mocha
```

Run example web app:

```bash
$ git clone git://github.com/TroyGoode/node-tsa.git tsa
$ cd tsa/
$ npm install
$ cd example/
$ npm install
$ node app.js
$ open http://localhost:3000
```

## License

[MIT License](http://www.opensource.org/licenses/mit-license.php)

## Author

[Troy Goode](https://github.com/TroyGoode) ([troygoode@gmail.com](mailto:troygoode@gmail.com))
